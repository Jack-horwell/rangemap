% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rangemap_bound.R
\name{rangemap_bound}
\alias{rangemap_bound}
\title{Species distributional ranges based on political boundaries}
\usage{
rangemap_bound(occurrences, boundaries = "countries", polygons,
  disolve = TRUE, export = FALSE)
}
\arguments{
\item{occurrences}{a data.frame containing species occurrences, columns must be:
Species, Longitude, and Latitude.}

\item{boundaries}{(character) type of boundaries to use from the available: "countries",
"states" for USA and CAN only, "counties" for USA, "departments" and "provinces" for other
countries; default = "countries".}

\item{polygons}{(optional) a SpatialPolygon object that will be used instead of boundaries
to create species ranges based on overlapping of species records with these layer. If defined,
argument boundaries will not be considered.}

\item{disolve}{(logical) if TRUE distint polygons selected as part of the species range will
be disolved for creating simpler polygons, default = TRUE.}

\item{export}{(logical) if TRUE a shapefile of the species range will be written in the working
directory, appart of the returned object.}
}
\value{
A named list containing a data.frame with information about the species range, a
SpatialPolygon object of the species range in Geographic projection, and the same SpatialPolygon
object projected to the Azimuthal equal area projection.
}
\description{
rangemap_bound generates a species range polygon for a given species
by considering all the polygons of political entities in which the species has
been detected.
}
\details{
Boundaries used are loaded using the \code{\link[GADMTools]{gadm.loadCountries}} funcion.
}
\examples{
if(!require(rgbif)){
install.packages("rgbif")
library(rgbif)
}

# getting the data from GBIF
occ <- occ_search(taxonKey = 2440788, return = "data")

# keeping only georeferenced records
occ_g <- occ[!is.na(occ$decimalLatitude) & !is.na(occ$decimalLongitude),]

disolve <- TRUE

bound_range <- rangemap_bound(occurrences = occ_g, boundaries = "countries", disolve = disolve)
}
