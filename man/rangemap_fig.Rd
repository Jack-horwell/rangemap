% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rangemap_fig.R
\name{rangemap_fig}
\alias{rangemap_fig}
\title{Figures of species range maps}
\usage{
rangemap_fig(range, polygons, add_extent = FALSE, add_occurrences = FALSE,
  basemap_color = "grey93", range_color = "darkgreen",
  extent_color = "blue", occurrences_color = "yellow", grid = FALSE,
  grid_sides = "bottomleft", ylabels_position = 2.3, legend = FALSE,
  legend_position = "bottomright", northarrow = FALSE,
  northarrow_position = "topright", scalebar = FALSE,
  scalebar_position = "bottomleft", scalebar_length = 100, zoom = 1,
  save_fig = FALSE, name = "range_fig", format = "png",
  resolution = 300, width = 166, height = 166)
}
\arguments{
\item{range}{an object produced with any of the following functions:
\code{\link{rangemap_buff}}, \code{\link{rangemap_bound}}, \code{\link{rangemap_hull}},
\code{\link{rangemap_enm}}, and \code{\link{rangemap_tsa}}.}

\item{polygons}{a SpatialPolygon object to be used as base map for plotting the species range.
If not provided, a simplified world map will be used.}

\item{add_extent}{(logical) if TRUE the extent of occurrence of the species will be added to
the figure. Ignored if the \code{range} is product of the \code{\link{rangemap_bound}} function
and administrative areas were selected only based on names. Default = FALSE.}

\item{add_occurrences}{(logical) if TRUE the species occurrence records will be added to
the figure. Ignored if the \code{range} is product of the \code{\link{rangemap_bound}} function
and administrative areas were selected only based on names. Default = FALSE.}

\item{basemap_color}{color for the basemap (\code{polygons}) to be ploted in the figure.
Default = "grey93".}

\item{range_color}{color for the species \code{range} to be ploted in the figure.
Default = "darkgreen".}

\item{extent_color}{color for the species extent of occurrence to be ploted in the figure.
Default = "blue".}

\item{occurrences_color}{color for the species \code{occurrences} to be ploted in the figure.
Default = "yellow".}

\item{grid}{(logical) if TRUE labels and grid division ticks will be inserted in \code{grid_sides}.
Default = FALSE.}

\item{grid_sides}{(character) sides in which the labels will be placed in the figure. Options
are the same than for other position character indicators (see details). Default = "bottomleft".}

\item{ylabels_position}{(numeric) if \code{grid} = TRUE, separation (in lines) of y axis labels from
the axis. Bigger numbers will increase separation. Default = 2.3.}

\item{legend}{(logical) if TRUE a legend of the plotted features will be added to the figure at
\code{legend_position}. Default = FALSE.}

\item{legend_position}{(numeric or character) site in the figure where the north legend will be placed. If
numeric, vector of leght two indicating x and y coordinates to be used to position the legend. See
details for options of character indicators of position. Default = "bottomright".}

\item{northarrow}{(logical) if TRUE, a simple north arrow will be placed in \code{northarrow_position}.
Default = FALSE.}

\item{northarrow_position}{(numeric or character) site in the figure where the north legend will be placed. If
numeric, vector of leght two indicating x and y coordinates to be used to position the north arrow. See
details for options of character indicators of position. Default = "topright".}

\item{scalebar}{(logical) if TRUE a simple scale bar will be inserted in the figure at
\code{scalebar_position} with a length of \code{scalebar_length}. Default = FALSE.}

\item{scalebar_position}{(numeric or character) site in the figure where the north legend will be placed. If
numeric, vector of leght two indicating x and y coordinates to be used to position the scale bar. See
details for options of character indicators of position. Default = bottomleft".}

\item{scalebar_length}{(numeric) length of the scale bar in km. Using entire numbers divisble for
two is recommended. Default = 100.}

\item{zoom}{(numeric) zoom factor when ploting the species range in a map. Default = 1. Values
lower than 1 will zoom in into the species range and values bigger than 1 will zoom out. A value of 2
will duplicate the area that the figure is covering.}

\item{save_fig}{(logical) if TRUE the figure will be written in the working directory. Default = FALSE.}

\item{name}{(character) if \code{save_fig} = TRUE, name of the figure to be exported. Default = "range_fig".}

\item{format}{(character) if \code{save_fig} = TRUE, format in which the figure will be written. Options
include "bmp", "png", "jpeg", "tiff", and "pdf". Default = "png".}

\item{resolution}{(numeric) if \code{save_fig} = TRUE, resolution (ppi) in wich the figure will be exported.
Default = 300.}

\item{width}{(numeric) if \code{save_fig} = TRUE, width of the figure in mm. Default = 166.}

\item{height}{(numeric) if \code{save_fig} = TRUE, height of the figure in mm. Default = 166.}
}
\value{
A figure of the species distributional range in a geographical context, with map components
defined by the user.
}
\description{
rangemap_fig generates customizable figures of species range maps
using objects produced by other functions of this package.
}
\details{
Position of distinct elements depend on the spatial configuration of the species range.
Therefore, their position may need to be changed if the elements are needed. Position options are:
"bottomright", "bottomleft", "topleft", and "topright". Future releases will include numerical options
for positioning these elememts.

Scale bar is ploted using a modification of the "scalebar" function developed by Tanimura et al. (2007)
\url{http://hdl.handle.net/10.18637/jss.v019.c01}.
}
\examples{
if(!require(rgbif)){
  install.packages("rgbif")
  library(rgbif)
}

# getting the data from GBIF
species <- name_lookup(query = "Dasypus kappleri",
                       rank="species", return = "data") # information about the species

occ_count(taxonKey = species$key[14], georeferenced = TRUE) # testing if keys return records

key <- species$key[14] # using species key that return information

occ <- occ_search(taxonKey = key, return = "data") # using the taxon key

# keeping only georeferenced records
occ_g <- occ[!is.na(occ$decimalLatitude) & !is.na(occ$decimalLongitude),
             c("name", "decimalLongitude", "decimalLatitude")]

level <- 0
adm <- "Ecuador"
dissolve <- FALSE
save <- FALSE
countries <- c("PER", "BRA", "COL", "VEN", "ECU", "GUF", "GUY", "SUR", "BOL")

# creating the species range map
range <- rangemap_bound(occurrences = occ_g, country_code = countries, adm_areas = adm,
                        boundary_level = level, dissolve = dissolve, save_shp = save)

# arguments for the species range figure
extent <- TRUE
occ <- TRUE
grid <- TRUE
sides <- "bottomleft"
legend <- TRUE
north <- TRUE

# creating the species range figure
rangemap_fig(range, add_extent = extent, add_occurrences = occ,
             grid = grid, grid_sides = sides, legend = legend,
             northarrow = north)

#dev.off() # for returning to default par settings
}
