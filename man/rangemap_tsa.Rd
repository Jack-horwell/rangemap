% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rangemap_tsa.R
\name{rangemap_tsa}
\alias{rangemap_tsa}
\title{Species distributional ranges based on trend surface analyses}
\usage{
rangemap_tsa(occurrences, region_of_interest, resolution = 5, threshold = 0,
    simplify_level = 0, save_shp = FALSE, save_tsmodel = FALSE,
    name = "range_tsa")
}
\arguments{
\item{occurrences}{a data.frame containing geographic coordinates of species occurrences,
columns must be: Species, Longitude, and Latitude. Geographic coordinates must be in
decimal degrees.}

\item{region_of_interest}{a SpatialPolygon object on which the trend surface analysis
will be performed. For instance, a country, an ecoregion, or a biogeogeographical region.
Projection must be Geographic (longitude, latitude).}

\item{resolution}{(numeric) resolution in kilometers in which the resultant surface will
be created, default = 5. Rsolution will depend on the size of the area in wich the species
is distributed and values lower than 1 are only recomended when the species is narrowly
distributed.}

\item{threshold}{(numeric) percentage of occurrence records to be excluded when deciding
the minimum trend surface value to be considered as part of the species range. Default = 0.}

\item{simplify_level}{(numeric) tolerance at the moment of simplifying polygons created
with the trend surface model. Lower values will produce polygons more similar to the original
geometry. Default = 0. If simplify is needed, try numbers between 0 and 1 first.}

\item{final_projection}{(character) string of projection arguments for resulting Spatial objects.
Arguments must be as in the PROJ.4 documentation. See \code{\link[sp]{CRS-class}} for details.
Default = "+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0" = WGS84.}

\item{save_shp}{(logical) if TRUE, shapefiles of the species range, occurrences, extent of
occurrence and area of occupancy will be written in the working directory. Default = FALSE.}

\item{save_tsmodel}{(logical) if TRUE, the species tsa model will be included as part of the
object (list) returned, and if other shapefiles are also saved, \code{save_shp} = TRUE, the
tsa model will be written in GeoTif format in the working directory. Default = FALSE.}

\item{name}{(character) valid if \code{save_shp} = TRUE. The name of the geographic files
to be exported. A suffix will be added to \code{name} depending on the object as follows:
species extent of occurrence = "_extent_occ", area of occupancy = "_area_occ", occurrences
= "_unique_records", and, if \code{save_tsmodel} = TRUE, trend surface model "_tsa".
Default = "range_tsa".}
}
\value{
A named list containing: (1) a data.frame with information about the species range,
and SpatialPolygon objects of (2) unique occurrences, (3) species range, (4) extent of
occurrence, and (5) area of occurpancy. If \code{save_tsmodel} = TRUE, the (6) tsa model
will be included as well. All Spatial objects will be in Azimuthal equal area projection.
}
\description{
rangemap_tsa generates a distributional range for a given species
using a trend surface analysis. An approach to the species extent of occurrence
(using convex hulls) and the area of occupancy according to the IUCN criteria
are also generated. Shapefiles can be saved in the working directory if it is needed.
}
\details{
Trend surface analysis is a method based on low-order polynomials of spatial
coordinates for estimating a regular grid of points from scattered observations. This
method assumes that all cells not occupied by occurrences are absences; hence its use
depends on the quality of data and the certainty of having or not a complete sampling
of the \code{regiong_of_interest}.
}
\examples{
if(!require(rgbif)){
  install.packages("rgbif")
  library(rgbif)
}
if(!require(maps)){
  install.packages("maps")
  library(maps)
}
if(!require(maptools)){
 install.packages("maptools")
 library(maptools)
}

# getting the data from GBIF
species <- name_lookup(query = "Peltophryne taladai",
                       rank="species", return = "data") # information about the species

#occ_count(taxonKey = species$key[7], georeferenced = TRUE) # testing if keys return records

key <- species$key[7] # using species key that return information

occ <- occ_search(taxonKey = key, return = "data") # using the taxon key

# keeping only georeferenced records
occ_g <- occ[!is.na(occ$decimalLatitude) & !is.na(occ$decimalLongitude),
             c("name", "decimalLongitude", "decimalLatitude")]

# region of interest
WGS84 <- CRS("+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0")
w_map <- map(database = "world", regions = "Cuba", fill = TRUE, plot = FALSE) # map of the world
w_po <- sapply(strsplit(w_map$names, ":"), function(x) x[1]) # preparing data to create polygon
reg <- map2SpatialPolygons(w_map, IDs = w_po, proj4string = WGS84) # map to polygon

# other data
res <- 5
thr <- 0
save <- TRUE
name <- "test"

tsa <- rangemap_tsa(occurrences = occ_g, region_of_interest = reg,
                    threshold = thr, resolution = res, save_shp = save,
                    name = name)

# see the species range in a figure
extent <- TRUE
occ <- TRUE
legend <- TRUE
north <- TRUE

# creating the species range figure
rangemap_fig(tsa, add_extent = extent, add_occurrences = occ,
             legend = legend, northarrow = north, legend_position = "bottomleft")
}
